Object subclass: #Consumo	instanceVariableNames: 'fecha consumoEnergiaReactiva consumoEnergiaActiva'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Ejercicio9-bis-model'!!Consumo methodsFor: 'initialize' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!initialize	fecha := Date today.! !!Consumo methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!costoEnBaseA: precioKWh	^consumoEnergiaActiva * precioKWh ! !!Consumo methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!activa	^consumoEnergiaActiva! !!Consumo methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!factorDePotencia	^consumoEnergiaActiva / ((consumoEnergiaActiva squared) + (consumoEnergiaReactiva squared)) sqrt.! !!Consumo methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!fecha	^fecha! !!Consumo methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!reactiva	^consumoEnergiaReactiva! !!Consumo methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!activa: kwh reactiva: karph	consumoEnergiaActiva := kwh.	consumoEnergiaReactiva := karph.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Consumo class	instanceVariableNames: ''!!Consumo class methodsFor: 'intance creation' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!activa: kwh reactiva: karph	^self new activa: kwh reactiva: karph! !Object subclass: #Distribuidora	instanceVariableNames: 'usuarios precioKWh'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Ejercicio9-bis-model'!!Distribuidora methodsFor: 'initialize' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!initialize	usuarios := OrderedCollection new.! !!Distribuidora methodsFor: 'model' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!precioKWh: precio	precioKWh := precio.	! !!Distribuidora methodsFor: 'model' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!facturar	^ usuarios collect: [ :usuario | usuario facturarEnBaseA: precioKWh ]! !!Distribuidora methodsFor: 'model' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!agregarUsuario: unUsuario	usuarios add: unUsuario.	! !!Distribuidora methodsFor: 'model' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!consumoTotalActiva	^usuarios sum:[:usuario | usuario ultimoConsumoActiva]	"Notar que #sum: usa #inject:into:"! !!Distribuidora methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!precioKWh	^ precioKWh! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Distribuidora class	instanceVariableNames: ''!!Distribuidora class methodsFor: 'creation' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!precioKWh: precioKWh	^ self new		precioKWh: precioKWh;		yourself! !Object subclass: #Factura	instanceVariableNames: 'fecha monto descuento usuario'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Ejercicio9-bis-model'!!Factura methodsFor: 'initialize' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!monto: costoTotal descuento: descuentoTotal fecha: fechaFacturacion de: unUsuario	monto := costoTotal.	descuento := descuentoTotal.	fecha := fechaFacturacion.	usuario := unUsuario.! !!Factura methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!montoTotal	^monto - descuento! !!Factura methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!descuento	^ descuento! !!Factura methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!usuario	^ usuario! !!Factura methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!monto	^ monto! !!Factura methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!fecha	^ fecha! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Factura class	instanceVariableNames: ''!!Factura class methodsFor: 'creation' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!monto: monto descuento: descuento fecha: fecha de: usuario	^self new monto: monto descuento: descuento fecha: fecha de: usuario.! !Object subclass: #Usuario	instanceVariableNames: 'nombre consumos domicilio facturas'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Ejercicio9-bis-model'!!Usuario methodsFor: 'facturar' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!facturarEnBaseA: precioKWh	| costoTotal |	costoTotal := self ultimoConsumo costoEnBaseA: precioKWh.	^ facturas		add:			(Factura				monto: costoTotal				descuento: (self calcularDescuento: costoTotal)				fecha: Date today				de: self)	"Notar que el mensaje #add: devuelve el elemento agregado."! !!Usuario methodsFor: 'facturar' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!ultimoConsumoActiva	^ self ultimoConsumo ifNil: [ 0 ] ifNotNil: [ self ultimoConsumo activa ]! !!Usuario methodsFor: 'facturar' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!ultimoConsumoReactiva	^ self ultimoConsumo ifNil: [ 0 ] ifNotNil: [ self ultimoConsumo reactiva ]! !!Usuario methodsFor: 'facturar' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!ultimoConsumo	consumos		ifEmpty: [ ^ nil ]		ifNotEmpty: [ ^ (consumos asSortedCollection: [ :a :b | a fecha > b fecha ]) first ]! !!Usuario methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!domicilio	^ domicilio! !!Usuario methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!domicilio: unDomicilio	domicilio := unDomicilio.! !!Usuario methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!facturas	^ facturas! !!Usuario methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!nombre: anObject	nombre := anObject! !!Usuario methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!nombre	^ nombre! !!Usuario methodsFor: 'accessing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!agregarConsumo: consumo	consumos add: consumo.! !!Usuario methodsFor: 'private' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!calcularDescuento: monto	^(self ultimoConsumo factorDePotencia) >= 0.8 ifTrue: [ ^monto *  0.1] ifFalse:[ ^0 ]	! !!Usuario methodsFor: 'initialize' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!initialize	consumos := OrderedCollection new.	facturas := OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'creation' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!nombre: nombre domicilio: unDomicilio	^ self new		domicilio: unDomicilio;		nombre: nombre;		yourself! !TestCase subclass: #ConsumoTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Ejercicio9-bis-tests'!!ConsumoTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testCostoEnBaseA	| unConsumo |	unConsumo := Consumo activa: 1 reactiva: 2.	self assert: (unConsumo costoEnBaseA: 5) equals: 5.! !!ConsumoTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testConstructor	| unConsumo |	unConsumo := Consumo activa: 1 reactiva: 2.	self assert: unConsumo activa equals: 1.	self assert: unConsumo reactiva equals: 2.	self assert: unConsumo fecha equals: Date today! !!ConsumoTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testFactorDePotencia	| unConsumo |	unConsumo := Consumo activa: 1 reactiva: 2.	self assert: (unConsumo factorDePotencia closeTo: 1 / 5 sqrt).! !TestCase subclass: #DistribuidoraTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Ejercicio9-bis-tests'!!DistribuidoraTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testFacturar	| edelap usuario facturas |	edelap := Distribuidora precioKWh: 1.	self assert: edelap facturar isEmpty.	usuario := Usuario nombre: 'Alberto Picapiedras' domicilio: 'Diagonal 85, nro 73'.	edelap agregarUsuario: usuario.	usuario agregarConsumo: (Consumo activa: 1 reactiva: 0).	facturas := edelap facturar.	self assert: facturas notEmpty.	self assert: facturas first usuario equals: usuario! !!DistribuidoraTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testConsumoTotalActiva	| edelap usuario  |	edelap := Distribuidora precioKWh: 1.	self assert: edelap facturar isEmpty.	usuario := Usuario nombre: 'Alberto Picapiedras' domicilio: 'Diagonal 85, nro 73'.	"un usuario"	edelap agregarUsuario: usuario.	usuario agregarConsumo: (Consumo activa: 10 reactiva: 0).	usuario agregarConsumo: (Consumo activa: 1 reactiva: 0).	"otro usuario"	usuario := Usuario nombre: 'Maria Picapiedras' domicilio: 'Diagonal 85, nro 74'.	edelap agregarUsuario: usuario.	usuario agregarConsumo: (Consumo activa: 10 reactiva: 0).	usuario agregarConsumo: (Consumo activa: 2 reactiva: 0).		self assert: edelap consumoTotalActiva equals: 3.! !!DistribuidoraTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testConstructor	| edelap |	edelap := Distribuidora precioKWh: 8.	self assert: edelap precioKWh equals: 8.	! !TestCase subclass: #FacturaTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Ejercicio9-bis-tests'!!FacturaTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testConstructor	| factura |	factura := Factura		monto: 10		descuento: 2		fecha: Date today		de: Usuario new.	self assert: factura monto equals: 10.	self assert: factura descuento equals: 2.	self assert: factura fecha equals: Date today.	self assert: factura usuario notNil! !!FacturaTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testMontoTotal	| factura |	factura := Factura monto: 10 descuento: 2 fecha: Date today de: Usuario new.	self assert: factura montoTotal equals: 8.	! !TestCase subclass: #UsuarioTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Ejercicio9-bis-tests'!!UsuarioTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testAgregarConsumo	| usuario consumo |	usuario := Usuario nombre: 'Alberto Picapiedras' domicilio: 'Diagonal 85, nro 73'.	consumo := Consumo activa: 1 reactiva: 2.	usuario agregarConsumo: consumo.	self assert: usuario ultimoConsumo equals: consumo.	self assert: usuario ultimoConsumoActiva equals: 1.	self assert: usuario ultimoConsumoReactiva equals: 2! !!UsuarioTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testFacturarEnBaseA	| usuario factura |	usuario := Usuario nombre: 'Alberto Picapiedras' domicilio: 'Diagonal 85, nro 73'.	usuario agregarConsumo: (Consumo activa: 1 reactiva: 0).	factura := usuario facturarEnBaseA: 1.	self assert: factura notNil.	self assert: usuario facturas size equals: 1! !!UsuarioTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testConstructor	| usuario |	usuario := Usuario nombre: 'Alberto Picapiedras' domicilio: 'Diagonal 85, nro 73'.	self assert: usuario domicilio equals: 'Diagonal 85, nro 73'.	self assert: usuario nombre equals: 'Alberto Picapiedras'.	self assert: usuario ultimoConsumo isNil.	self assert: usuario facturas isEmpty.	self assert: usuario ultimoConsumoActiva equals: 0.	self assert: usuario ultimoConsumoReactiva equals: 0! !!UsuarioTest methodsFor: 'testing' stamp: 'JulianCasaburi 9/9/2018 01:02:33'!testCalcularDescuento	| usuario |	usuario := Usuario nombre: 'Alberto Picapiedras' domicilio: 'Diagonal 85, nro 73'.	usuario agregarConsumo: (Consumo activa: 1 reactiva: 0).	self assert: (usuario calcularDescuento: 100) equals: 10.	usuario agregarConsumo: (Consumo activa: 1 reactiva: 1).	self assert: (usuario calcularDescuento: 100) equals: 0! !