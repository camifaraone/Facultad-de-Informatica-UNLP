TestCase subclass: #BalanzaTest	instanceVariableNames: 'balanza queso jamon'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-BalanzaElectronicaSkeleton-Tests'!!BalanzaTest commentStamp: 'Casco 8/13/2018 11:04' prior: 0!Soy el test para las balanzas!!BalanzaTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testEmitirTicket	| ticket |	balanza agregarProducto: queso.	balanza agregarProducto: jamon.	ticket := balanza emitirTicket.	self assert: ticket pesoTotal equals: 0.2.	self assert: ticket precioTotal equals: 23.	self assert: ticket cantidadDeProductos equals: 2.	self assert: ticket impuesto equals: (23 * 0.21).	self assert: ticket fecha equals: Date today! !!BalanzaTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testAgregarProducto   balanza agregarProducto: queso.	self assert: balanza pesoTotal equals: 0.1.	self assert: balanza precioTotal equals: 14.	self assert: balanza cantidadDeProductos equals: 1.	   balanza agregarProducto: jamon.	self assert: balanza pesoTotal equals: 0.2.	self assert: balanza precioTotal equals: 23.	self assert: balanza cantidadDeProductos equals: 2! !!BalanzaTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testPonerEnCero	balanza agregarProducto: queso.	balanza ponerEnCero.	self assert: balanza pesoTotal equals: 0.	self assert: balanza precioTotal equals: 0.	self assert: balanza cantidadDeProductos equals: 0! !!BalanzaTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testInitialize	self assert: balanza pesoTotal equals: 0.	self assert: balanza precioTotal equals: 0.	self assert: balanza cantidadDeProductos equals: 0! !!BalanzaTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testPesoTotal	self assert: balanza pesoTotal equals: 0.	balanza agregarProducto: queso.	self assert: balanza pesoTotal equals: 0.1.	balanza agregarProducto: jamon.	self assert: balanza pesoTotal equals: 0.2! !!BalanzaTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testPrecioTotal	self assert: balanza precioTotal  equals: 0.	balanza agregarProducto: queso.	self assert: balanza precioTotal equals: 14.	balanza agregarProducto: jamon.	self assert: balanza precioTotal equals: 23! !!BalanzaTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testCantidadDeProductos	self assert: balanza cantidadDeProductos equals: 0.	balanza agregarProducto: queso.	self assert: balanza cantidadDeProductos equals: 1.	balanza agregarProducto: jamon.	self assert: balanza cantidadDeProductos equals: 2! !!BalanzaTest methodsFor: 'running' stamp: 'casco 8/29/2018 21:54:44'!setUp	balanza := Balanza new.	queso := Producto new.	queso		descripcion: 'Queso';		peso: 0.1;		precioPorKilo: 140.	jamon := Producto new.	jamon		descripcion: 'Jamon';		peso: 0.1;		precioPorKilo: 90! !TestCase subclass: #ProductoTest	instanceVariableNames: 'queso'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-BalanzaElectronicaSkeleton-Tests'!!ProductoTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testPrecio	queso		peso: 0.1;		precioPorKilo: 140.	self assert: queso precio equals: 14! !!ProductoTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testDescripcion	queso descripcion: 'Queso crema'.	self assert: queso descripcion equals: 'Queso crema'! !!ProductoTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testPrecioPorKilo	queso precioPorKilo: 100.	self assert: queso precioPorKilo equals: 100! !!ProductoTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testPeso	queso peso: 100.	self assert: queso peso equals: 100! !!ProductoTest methodsFor: 'running' stamp: 'casco 8/29/2018 21:54:44'!setUp	queso := Producto new.! !TestCase subclass: #TicketTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-BalanzaElectronicaSkeleton-Tests'!!TicketTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testImpuesto	| ticket |	ticket := Ticket new.	ticket precioTotal: 100.	self assert: ticket impuesto equals: 21! !!TicketTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testFecha	| ticket |	ticket := Ticket new.	ticket fecha: Date today.	self assert: ticket fecha equals: Date today! !!TicketTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testPrecioTotal	| ticket |	ticket := Ticket new.	ticket precioTotal: 100.	self assert: ticket precioTotal equals: 100! !!TicketTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testPesoTotal	| ticket |	ticket := Ticket new.	ticket pesoTotal: 100.	self assert: ticket pesoTotal equals: 100! !!TicketTest methodsFor: 'testing' stamp: 'casco 8/29/2018 21:54:44'!testCantidadDeProductos	| ticket |	ticket := Ticket new.	ticket cantidadDeProductos: 100.	self assert: ticket cantidadDeProductos equals: 100! !ComposableModel subclass: #BalanzaComposableModel	instanceVariableNames: 'balanza ponerEnCeroButton agregarProductoButton precioTotalLabel pesoTotalLabel cantidadLabel emitirComprobanteButton'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-BalanzaElectronicaSkeleton-UI'!!BalanzaComposableModel commentStamp: 'Casco 8/5/2018 19:23' prior: 0!Soy la UI de una Balanza. Solo conozco a la balanza. Ella hace todo. Por ahora me actualizo cuando yo envio mensajes al modelo.Lo correcto sería hacerlo cuando el modelo cambia (dependencias)!!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!precioTotalInput	^ precioTotalInput! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!balanza	^ balanza! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!cantidadLabel: anObject	cantidadLabel := anObject! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!precioTotalLabel: anObject	precioTotalLabel := anObject! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!precioTotalLabel	^ precioTotalLabel! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!emitirComprobanteButton: anObject	emitirComprobanteButton := anObject! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!ponerEnCeroButton	^ ponerEnCeroButton! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!emitirComprobanteButton	^ emitirComprobanteButton! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!balanza: anObject	balanza := anObject! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!pesoTotalInput: anObject	pesoTotalInput := anObject! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!precioTotalInput: anObject	precioTotalInput := anObject! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!cantidadInput	^ cantidadInput! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!pesoTotalLabel: anObject	pesoTotalLabel := anObject! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!cantidadLabel	^ cantidadLabel! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!ponerEnCeroButton: anObject	ponerEnCeroButton := anObject! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!pesoTotalInput	^ pesoTotalInput! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!pesoTotalLabel	^ pesoTotalLabel! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!cantidadInput: anObject	cantidadInput := anObject! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!agregarProductoButton: anObject	agregarProductoButton := anObject! !!BalanzaComposableModel methodsFor: 'accessing' stamp: 'casco 8/29/2018 21:54:44'!agregarProductoButton	^ agregarProductoButton! !!BalanzaComposableModel methodsFor: 'api' stamp: 'casco 8/29/2018 21:54:44'!title  ^ 'Una balanza electronica'.! !!BalanzaComposableModel methodsFor: 'api' stamp: 'casco 8/29/2018 21:54:44'!extent  ^ 400@140! !!BalanzaComposableModel methodsFor: 'initialization' stamp: 'casco 8/29/2018 21:54:44'!initialize	balanza := Balanza new.	super initialize! !!BalanzaComposableModel methodsFor: 'initialization' stamp: 'casco 8/29/2018 21:54:44'!initializePresenter	ponerEnCeroButton action: [ self ponerEnCero ].	agregarProductoButton action: [ self agregarProducto ].	emitirComprobanteButton action: [ self emitirComprobante ]! !!BalanzaComposableModel methodsFor: 'initialization' stamp: 'casco 8/29/2018 21:54:44'!initializeWidgets	precioTotalLabel := self newLabel.	pesoTotalLabel := self newLabel.	cantidadLabel := self newLabel.	self updateLabels.	ponerEnCeroButton := self newButton.	ponerEnCeroButton label: 'Cero'.	agregarProductoButton := self newButton.	agregarProductoButton label: 'Agregar producto'.	emitirComprobanteButton := self newButton.	emitirComprobanteButton label: 'Emitir comprobante'! !!BalanzaComposableModel methodsFor: 'updating' stamp: 'casco 8/29/2018 21:54:44'!updateLabels	precioTotalLabel		label: 'Precio total: ' , self balanza precioTotal asString.	pesoTotalLabel		label: 'Peso total: ' , self balanza pesoTotal asString.	cantidadLabel		label: 'Productos cargados: ' , self balanza cantidadDeProductos asString! !!BalanzaComposableModel methodsFor: 'actions' stamp: 'casco 8/29/2018 21:54:44'!ponerEnCero	self balanza ponerEnCero.	self updateLabels! !!BalanzaComposableModel methodsFor: 'actions' stamp: 'casco 8/29/2018 21:54:44'!agregarProducto	| cantidad precioPorKilo confirmado |	[ cantidad := (UIManager default request: 'Cantidad de producto en Kg') asNumber ]		on: Error		do: [ :ex | cantidad := 0 ].	[ precioPorKilo := (UIManager default request: 'Precio por Kg') asNumber ]		on: Error		do: [ :ex | precioPorKilo := 0 ].	confirmado := UIManager default		confirm:			'Usted agregara ' , cantidad asString , ' Kg, a un precio de $' , precioPorKilo asString				, ' por Kg'.	confirmado		ifTrue: [ self agregar: cantidad aPrecio: precioPorKilo ].	self updateLabels! !!BalanzaComposableModel methodsFor: 'actions' stamp: 'casco 8/29/2018 21:54:44'!emitirComprobante	| label |	label := self newText.	label disable.	label text: (self textoParaComprobante: self balanza emitirTicket).	label openWithSpec! !!BalanzaComposableModel methodsFor: 'private' stamp: 'casco 8/29/2018 21:54:44'!agregar: cantidad aPrecio: precioPorKilo	| producto |	producto := Producto new.	producto peso: cantidad.	producto precioPorKilo: precioPorKilo.	self balanza agregarProducto: producto! !!BalanzaComposableModel methodsFor: 'private' stamp: 'casco 8/29/2018 21:54:44'!textoParaComprobante: comprobante	| str |	str := 'Comprobante de balanza\' withCRs asText allBold.	str := str , '  Fecha: ' , comprobante fecha asString , '\' withCRs.	str := str , '  Cantidad de productos: ' , comprobante cantidadDeProductos asString		, '\' withCRs.	str := str , '  Peso total: ' , comprobante pesoTotal asString , ' kg\' withCRs.	str := str , '  Precio total: $' , comprobante precioTotal asString , '\' withCRs.	str := str , '  Impuesto: $' , comprobante impuesto asString.	^ str! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BalanzaComposableModel class	instanceVariableNames: ''!!BalanzaComposableModel class methodsFor: 'spec' stamp: 'casco 8/29/2018 21:54:44'!defaultSpec	^ SpecLayout composed		newRow: [ :row | 			row				newColumn: [ :col | 					col						add: #cantidadLabel;						add: #pesoTotalLabel;						add: #precioTotalLabel ].			row				newColumn: [ :col | 					col						add: #ponerEnCeroButton;						add: #agregarProductoButton;						add: #emitirComprobanteButton ] ]			height: 100;		yourself! !