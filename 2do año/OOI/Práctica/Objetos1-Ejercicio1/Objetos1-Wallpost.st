ComposableModel subclass: #WallpostUI	instanceVariableNames: 'text likeButton dislikeButton likesLabel wallpost staticLikesLabel staticFeaturedLabel featuredCheckbox inspectButton'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Wallpost-WallpostSkeleton-UI'!!WallpostUI commentStamp: 'Casco 8/13/2018 10:03' prior: 0!Si tu implementación de WallPost funciona bien, yo te permito interatuar con una de sus intancias en una ventanita ...!!WallpostUI methodsFor: 'api' stamp: 'casco 8/21/2019 14:50:07'!initialExtent	^ 250@250! !!WallpostUI methodsFor: 'api' stamp: 'casco 8/21/2019 14:50:07'!update	text text: wallpost text.	likesLabel label: wallpost likes printString.	"featuredCheckbox state: wallpost isFeatured"! !!WallpostUI methodsFor: 'accessing' stamp: 'casco 8/21/2019 14:50:07'!inspectButton ^ inspectButton! !!WallpostUI methodsFor: 'accessing' stamp: 'casco 8/21/2019 14:50:07'!wallpost:aPost wallpost:=aPost.! !!WallpostUI methodsFor: 'accessing' stamp: 'casco 8/21/2019 14:50:07'!initializePresenter	inspectButton whenActionPerformedDo: [ wallpost inspect ].	likeButton		whenActionPerformedDo: [ 			wallpost like.			self update ].	dislikeButton		whenActionPerformedDo: [ 			wallpost dislike.			self update ].	text		whenTextChanged: [ 			wallpost text: text text.			self update ].	featuredCheckbox		whenChangedDo: [ 			wallpost toggleFeatured.			self update ]! !!WallpostUI methodsFor: 'accessing' stamp: 'casco 8/21/2019 14:50:07'!featuredCheckbox  ^featuredCheckbox! !!WallpostUI methodsFor: 'accessing' stamp: 'casco 8/21/2019 14:50:07'!staticLikesLabel  ^staticLikesLabel! !!WallpostUI methodsFor: 'accessing' stamp: 'casco 8/21/2019 14:50:07'!text	^ text! !!WallpostUI methodsFor: 'accessing' stamp: 'casco 8/21/2019 14:50:07'!likesLabel  ^likesLabel! !!WallpostUI methodsFor: 'accessing' stamp: 'casco 8/21/2019 14:50:07'!title ^ 'Wallpost UI'! !!WallpostUI methodsFor: 'accessing' stamp: 'casco 8/21/2019 14:50:07'!likeButton	^ likeButton! !!WallpostUI methodsFor: 'accessing' stamp: 'casco 8/21/2019 14:50:07'!staticFeaturedLabel  ^staticFeaturedLabel! !!WallpostUI methodsFor: 'accessing' stamp: 'casco 8/21/2019 14:50:07'!dislikeButton	^ dislikeButton! !!WallpostUI methodsFor: 'initialization' stamp: 'casco 8/21/2019 14:50:07'!initializeWidgets	text := self newText.	text autoAccept:true; isCodeCompletionAllowed: false.	text text: wallpost text.	likeButton := self newButton label: 'Like'.	inspectButton := self newButton label: 'Inspect'.	dislikeButton := self newButton label: 'Dislike'.	staticLikesLabel := self newLabel		label: 'Likes ';		yourself.	featuredCheckbox := self newCheckBox.	staticFeaturedLabel := self newLabel		label: 'Featured';		yourself.	likesLabel := self newLabel label: wallpost likes printString.	self focusOrder		add: inspectButton;		add: text;		add: featuredCheckbox;		add: likeButton;		add: dislikeButton! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WallpostUI class	instanceVariableNames: ''!!WallpostUI class methodsFor: 'as yet unclassified' stamp: 'casco 8/21/2019 14:50:07'!defaultSpec	<spec: #default>	^ SpecLayout composed		newColumn: [ :column | 					column						add: #inspectButton height: 30;						add: #text;						newRow: [ :row | 									row										add: #staticFeaturedLabel;										add: #featuredCheckbox ]							height: 30;						newRow: [ :row | 									row										add: #staticLikesLabel;										add: #likesLabel ]							height: 30;						newRow: [ :row | 									row										add: #likeButton;										add: #dislikeButton ]							height: 30 ];		yourself! !!WallpostUI class methodsFor: 'as yet unclassified' stamp: 'casco 8/21/2019 14:50:07'!on: aWP	^ self basicNew		wallpost: aWP;		initialize;		openWithSpec;		yourself! !TestCase subclass: #WallpostTest	instanceVariableNames: 'wallpost coolPost'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Wallpost-WallpostSkeleton-Tests'!!WallpostTest commentStamp: '<historical>' prior: 0!A WallpostTest is a test class for testing the behavior of Wallpost!!WallpostTest methodsFor: 'running' stamp: 'JulianCasaburi 9/3/2019 11:05'!setUp	wallpost := Wallpost new.	coolPost := Wallpost new.	coolPost		like;		like;		like;		like; toggleFeatured 		 ! !!WallpostTest methodsFor: 'testing' stamp: 'casco 8/21/2019 14:50:07'!testLike	self assert: wallpost likes = 0.	wallpost like.	self assert: wallpost likes = 1.	wallpost		like;		like;		like.	self assert: wallpost likes = 4! !!WallpostTest methodsFor: 'testing' stamp: 'casco 8/21/2019 14:50:07'!testFeatured self deny:  wallpost isFeatured. ! !!WallpostTest methodsFor: 'testing' stamp: 'casco 8/21/2019 14:50:07'!testToggleFeatured	self assert: wallpost toggleFeatured isFeatured.	self deny: coolPost toggleFeatured isFeatured! !!WallpostTest methodsFor: 'testing' stamp: 'casco 8/21/2019 14:50:07'!testDislike	coolPost dislike.	self assert: coolPost likes = 3.	coolPost		dislike;		dislike.	self assert: coolPost likes = 1.	coolPost dislike.	self assert: coolPost likes = 0.	coolPost dislike.	self assert: coolPost likes = 0! !!WallpostTest methodsFor: 'testing' stamp: 'casco 8/21/2019 14:50:07'!testText	wallpost text: 'hello'.	self assert: wallpost text = 'hello'.      wallpost text: 'bye'.	self assert: wallpost text = 'bye'.	! !!WallpostTest methodsFor: 'testing' stamp: 'casco 8/21/2019 14:50:07'!testWallpost    self assert:   wallpost likes  = 0 . ! !Object subclass: #Wallpost	instanceVariableNames: 'text likesAmount featured'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-Wallpost-Model'!!Wallpost methodsFor: 'accessing' stamp: 'JulianCasaburi 9/3/2019 10:58'!text: descriptionText	"Setea el texto descriptivo de la publicación"	text := descriptionText.! !!Wallpost methodsFor: 'accessing' stamp: 'JulianCasaburi 9/3/2019 10:58'!text	"Retorna el texto descriptivo de la publicación"		^ text! !!Wallpost methodsFor: 'initialization' stamp: 'JulianCasaburi 9/3/2019 11:02'!initialize	"Inicializa el estado de las variables de instancia del Wallpost. Luego de la	invocación el Wallpost debe tener como texto: “Undefined post”, no debe estar	marcado como destacado y la cantidad de “Me gusta” deben ser 0."		self text: 'Undefined post'.	featured := false.	likesAmount := 0.! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 9/3/2019 10:59'!dislike	"Decrementa la cantidad de likes en uno. Si ya es 0, no hace nada"		(likesAmount > 0)	ifTrue: [ likesAmount := likesAmount - 1. ].	! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 9/3/2019 10:59'!like	"Incrementa la cantidad de likes en uno"		likesAmount := likesAmount + 1.! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 9/3/2019 11:01'!toggleFeatured	"Cambia el post del estado destacado a no destacado y viceversa"		featured := featured not.! !!Wallpost methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 9/3/2019 10:59'!likes	"Retorna la cantidad de “me gusta“"		^ likesAmount.		! !!Wallpost methodsFor: 'testing' stamp: 'JulianCasaburi 9/3/2019 11:00'!isFeatured	"Retorna true si el post está marcado como destacado, false en caso contrario"		^ featured! !