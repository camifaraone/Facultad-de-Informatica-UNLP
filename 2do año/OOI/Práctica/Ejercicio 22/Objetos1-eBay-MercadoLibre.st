TestCase subclass: #MecanismoDePagoEbayTest	instanceVariableNames: 'mecanismo'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre-Test'!!MecanismoDePagoEbayTest methodsFor: 'initialization'!setUp	! !!MecanismoDePagoEbayTest methodsFor: 'initialization'!testPrecioDeEnvio	! !TestCase subclass: #OpcionDeCompraTest	instanceVariableNames: 'opcion'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre-Test'!!OpcionDeCompraTest methodsFor: 'initialization'!setUp	! !!OpcionDeCompraTest methodsFor: 'initialization'!testPrecioDeCompra	! !TestCase subclass: #PedidoEbayTest	instanceVariableNames: 'producto cantidadP opcionDePago mecanismoDeEnvio cliente'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre-Test'!!PedidoEbayTest methodsFor: 'initialization'!setUp	! !!PedidoEbayTest methodsFor: 'initialization'!testPrecioTotalDelPedido	! !TestCase subclass: #PersonaEbayTest	instanceVariableNames: 'nombre direccion'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre-Test'!!PersonaEbayTest methodsFor: 'initialization'!testEsCliente	! !!PersonaEbayTest methodsFor: 'initialization'!setUp	! !!PersonaEbayTest methodsFor: 'initialization'!testEsVendedor	! !!PersonaEbayTest methodsFor: 'initialization'!testNombreConDireccion	! !TestCase subclass: #SistemaDeComprasTest	instanceVariableNames: 'unSistema unaPersona unProducto unMetodo unaOpcion unPedido'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre-Test'!!SistemaDeComprasTest methodsFor: 'tests'!setUp	unSistema := SistemaDeCompras new.	unaPersona := PersonaEbay newNombre: 'Matias' conSuDireccion: 'nada'.	unSistema		registrarCliente: 'Matias' con: 'nada';		registrarCliente: 'Nuri' con: 'manaos';		registrarVendedor: 'Gonza' con: 'Torres'.	unMetodo := ExpresDomicilio new.	unaOpcion := EnSeisCuotas new.	unProducto := ProductoEbay		newNombre: 'Fideos'		con: 'Masa'		con: 1		con: 1		y: 'Matias'.	unPedido := PedidoEbay		newProducto: unProducto		cantidadP: 2		opcionDePago: unaOpcion		mecanismoDeEnvio: unMetodo		cliente: unaPersona! !!SistemaDeComprasTest methodsFor: 'tests'!testBuscarCliente	| tmp1 |	tmp1 := unSistema registrarCliente: 'perepepe' con: 'papa'.	self assert: (unSistema buscarCliente: 'perepepe') equals: tmp1! !!SistemaDeComprasTest methodsFor: 'initialization'!testCostoTotalDe	self assert: (unSistema costoTotalDe: unPedido) equals: 100.2! !Object subclass: #Mapa	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!Mapa methodsFor: 'as yet unclassified'!distanciaEntre: arg1 y: arg2	^ 100! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Mapa class	instanceVariableNames: ''!!Mapa class methodsFor: 'as yet unclassified'!distanciaEntre: arg1 y: arg2	^ 100! !Object subclass: #MecanismoDePagoEbay	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!MecanismoDePagoEbay methodsFor: 'as yet unclassified'!precioDeEnvioEntre: arg1 y: arg2	self subclassResponsibility! !!MecanismoDePagoEbay methodsFor: 'as yet unclassified'!precioDeEnvio	self subclassResponsibility! !MecanismoDePagoEbay subclass: #ExpresDomicilio	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!ExpresDomicilio methodsFor: 'as yet unclassified'!precioDeEnvioEntre: arg1 y: arg2	^ Mapa distanciaEntre: arg1 y: arg2! !!ExpresDomicilio methodsFor: 'as yet unclassified'!precioDeEnvio	^ Mapa! !Object subclass: #OpcionDeCompra	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!OpcionDeCompra methodsFor: 'as yet unclassified'!precioDeCompra	self subclassResponsibility! !OpcionDeCompra subclass: #AlContacto	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!AlContacto methodsFor: 'as yet unclassified'!precioDeCompra	^ 1! !OpcionDeCompra subclass: #EnSeisCuotas	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!EnSeisCuotas methodsFor: 'as yet unclassified'!precioDeCompra	^ 0.2! !Object subclass: #PedidoEbay	instanceVariableNames: 'producto cantidadP opcionDePago mecanismoDeEnvio cliente'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!PedidoEbay methodsFor: 'as yet unclassified'!producto: arg1 cantidad: arg2 opcion: arg3 mecanismo: arg4 cliente: arg5	producto := arg1.	cantidadP := arg2.	opcionDePago := arg3.	mecanismoDeEnvio := arg4.	cliente := arg5! !!PedidoEbay methodsFor: 'as yet unclassified'!precioTotalDePedido	^ producto precio * opcionDePago precioDeCompra + mecanismoDeEnvio		precioDeEnvioEntre: cliente direccion		y: producto direccionVendedor! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PedidoEbay class	instanceVariableNames: ''!!PedidoEbay class methodsFor: 'instance creation'!newProducto: arg1 cantidadP: arg2 opcionDePago: arg3 mecanismoDeEnvio: arg4 cliente: arg5	^ self new		producto: arg1		cantidad: arg2		opcion: arg3		mecanismo: arg4		cliente: arg5! !Object subclass: #PersonaEbay	instanceVariableNames: 'nombre direccion'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!PersonaEbay methodsFor: 'accessing'!nombre	^ nombre! !!PersonaEbay methodsFor: 'accessing'!direccion	^ direccion! !!PersonaEbay methodsFor: 'as yet unclassified'!nombre: arg1 conDireccion: arg2	nombre := arg1.	direccion := arg2! !!PersonaEbay methodsFor: 'as yet unclassified'!esCliente	^ false! !!PersonaEbay methodsFor: 'as yet unclassified'!esVendedor	^ false! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PersonaEbay class	instanceVariableNames: ''!!PersonaEbay class methodsFor: 'instance creation'!newNombre: arg1 conSuDireccion: arg2	^ self new nombre: arg1 conDireccion: arg2! !Object subclass: #ProductoEbay	instanceVariableNames: 'nombre descripcion precio stock vendedor'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!ProductoEbay methodsFor: 'accessing'!actualizaStock: arg1	stock := stock - arg1! !!ProductoEbay methodsFor: 'accessing'!nombre	^ nombre! !!ProductoEbay methodsFor: 'accessing'!stock	^ stock! !!ProductoEbay methodsFor: 'accessing'!direccionVendedor	^ vendedor direccion! !!ProductoEbay methodsFor: 'accessing'!precio	^ precio! !!ProductoEbay methodsFor: 'as yet unclassified'!nombre: arg1 con: arg2 con: arg3 con: arg4 y: arg5	nombre := arg1.	descripcion := arg2.	precio := arg3.	stock := arg4.	vendedor := arg5! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ProductoEbay class	instanceVariableNames: ''!!ProductoEbay class methodsFor: 'instance creation'!newNombre: arg1 con: arg2 con: arg3 con: arg4 y: arg5	^ self new		nombre: arg1		con: arg2		con: arg3		con: arg4		y: arg5! !MecanismoDePagoEbay subclass: #RetirarEnElComercio	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!RetirarEnElComercio methodsFor: 'as yet unclassified'!precioDeEnvioEntre: arg1 y: arg2	^ 0! !!RetirarEnElComercio methodsFor: 'as yet unclassified'!precioDeEnvio	^ 0! !MecanismoDePagoEbay subclass: #RetirarEnLaSucursal	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!RetirarEnLaSucursal methodsFor: 'as yet unclassified'!precioDeEnvioEntre: arg1 y: arg2	^ 50! !!RetirarEnLaSucursal methodsFor: 'as yet unclassified'!precioDeEnvio	^ 50! !Object subclass: #SistemaDeCompras	instanceVariableNames: 'clientes vendedores productos pedidos'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1-eBay-MercadoLibre'!!SistemaDeCompras methodsFor: 'initialization'!initialize	clientes := OrderedCollection new.	vendedores := OrderedCollection new.	productos := OrderedCollection new.	pedidos := OrderedCollection new! !!SistemaDeCompras methodsFor: 'initialization'!buscarCliente: arg1	^ clientes detect: [ :arg2 | arg2 nombre = arg1 ] ifNone: [ ^ nil ]! !!SistemaDeCompras methodsFor: 'initialization'!costoTotalDe: arg1	^ arg1 precioTotalDePedido! !!SistemaDeCompras methodsFor: 'initialization'!registrarPedidoA: arg1 con: arg2 con: arg3 con: arg4 y: arg5	arg4 stock = arg5		ifTrue: [ pedidos				add:					(PedidoEbay						newProducto: arg4						cantidadP: arg5						opcionDePago: arg2						mecanismoDeEnvio: arg3						cliente: arg1).			arg4 actualizaStock: arg5 ]! !!SistemaDeCompras methodsFor: 'initialization'!buscarVendedor: arg1	^ vendedores detect: [ :arg2 | arg2 nombre = arg1 nombre ]! !!SistemaDeCompras methodsFor: 'initialization'!registrarCliente: arg1 con: arg2	^ clientes add: (PersonaEbay newNombre: arg1 conSuDireccion: arg2)! !!SistemaDeCompras methodsFor: 'initialization'!registrarVendedor: arg1 con: arg2	^ vendedores add: (PersonaEbay newNombre: arg1 conSuDireccion: arg2)! !!SistemaDeCompras methodsFor: 'initialization'!buscarProducto: arg1	^ productos select: [ :arg2 | arg2 nombre = arg1 nombre ]! !!SistemaDeCompras methodsFor: 'initialization'!ponerProductoALaVentaCon: arg1 con: arg2 con: arg3 con: arg4 y: arg5	productos		add:			(ProductoEbay				newNombre: arg1				con: arg2				con: arg3				con: arg4				y: arg5)! !