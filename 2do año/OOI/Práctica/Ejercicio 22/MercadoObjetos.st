Object subclass: #Envio	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!Envio methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 17:52'!costoEnvio: unPedido^self subclassResponsibility ! !Envio subclass: #Comercio	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!Comercio methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 17:53'!costoEnvio:unPedido^0! !Envio subclass: #Correo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!Correo methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 17:53'!costoEnvio:unPedido^50! !Envio subclass: #Domicilio	instanceVariableNames: 'distancia'	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!Domicilio methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 18:36'!costoEnvio: unPedido|mapa|mapa := Mapa new.^0.5 * (mapa distanciaEntre: (unPedido cliente direccion)  y: (unPedido producto vendedor direccion))! !Object subclass: #FormaDePago	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!FormaDePago methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 17:54'!costoPago^self subclassResponsibility ! !FormaDePago subclass: #Cuotas	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!Cuotas methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 17:53'!costoPago^0.2! !FormaDePago subclass: #Efectivo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!Efectivo methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 17:53'!costoPago^0! !Object subclass: #Mapa	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!Mapa methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 18:32'!distanciaEntre:unDistancia y:otraDistancia^100! !Object subclass: #MercadoObjetos	instanceVariableNames: 'clientes vendedores productos pedidos'	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!MercadoObjetos methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 16:44'!initialize clientes := OrderedCollection new.ventas := OrderedCollection new.productos := OrderedCollection new.pedidos := OrderedCollection new.! !!MercadoObjetos methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 16:37'!buscarProducto: unNombre^productos select:[:producto | producto nombre = unNombre ].! !!MercadoObjetos methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 16:22'!registrarUnVendedor: unNombre direccion:unaDireccion^vendedores add:(Persona nuevaPersona: unNombre direccion: unaDireccion )! !!MercadoObjetos methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 16:23'!registrarUnCliente: unNombre direccion:unaDireccion^clientes add:(Persona nuevaPersona: unNombre direccion: unaDireccion )! !!MercadoObjetos methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 16:31'!buscarUnVendedor: unNombre^vendedores detect:[:vendedor | vendedor nombre = unNombre ] ifNone:[^nil].! !!MercadoObjetos methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 18:10'!ponerProductoALaVenta: unNombre descripcion:unaDescripcion precio:unPrecio cantidadStock: unaCantidad vendedor:unVendedor|aux|aux:=(Producto nuevoProducto: unNombre descripcion:unaDescripcion precio:unPrecio cantidadStock: unaCantidad vendedor:unVendedor).productos add:(aux).^aux! !!MercadoObjetos methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 18:12'!registrarUnPedido:unCliente producto:unProducto pago:unPago envio:unEnvio cantidad:unaCantidad|aux|(unProducto hayStock: unaCantidad)ifTrue: [	aux:= (Pedido nuevoPedido: unCliente producto:unProducto pago:unPago envio:unEnvio cantidad:unaCantidad).	pedidos add:(aux). 	unProducto restarStock: unaCantidad. ^aux]! !!MercadoObjetos methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 18:14'!calcularCostoPedido: unPedido^unPedido costoTotal.! !!MercadoObjetos methodsFor: 'as yet unclassified' stamp: 'Nic 6/4/2020 16:31'!buscarUnCliente: unNombre^clientes detect:[:cliente | cliente nombre = unNombre ] ifNone:[^nil].! !Object subclass: #Pedido	instanceVariableNames: 'cantidad cliente producto pago envio'	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:49'!pago: anObject	pago := anObject! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:49'!envio: anObject	envio := anObject! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 17:17'!cliente	^ cliente! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:49'!pago	^ pago! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 18:25'!precioUnidad^(self producto) precio ! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 17:15'!producto	^ producto! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 17:15'!producto: anObject	producto := anObject! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 18:29'!costoTotal^self totalPedido + (self totalPedido * self pago costoPago) + self envio costoEnvio! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 18:25'!totalPedido^cantidad * self precioUnidad ! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 17:17'!cliente: anObject	cliente := anObject! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:49'!cantidad: anObject	cantidad := anObject! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 17:24'!nuevoPedido: unCliente producto:unProducto pago:unPago envio:unEnvio cantidad:unaCantidadself cliente: unCliente; producto: unProducto; pago: unPago; envio: unEnvio; cantidad: unaCantidad .! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:49'!envio	^ envio! !!Pedido methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:49'!cantidad	^ cantidad! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pedido class	instanceVariableNames: ''!!Pedido class methodsFor: 'accessing' stamp: 'Nic 6/4/2020 17:24'!nuevoPedido: unCliente producto:unProducto pago:unPago envio:unEnvio cantidad:unaCantidad^self new nuevoPedido: unCliente producto:unProducto pago:unPago envio:unEnvio cantidad:unaCantidad! !Object subclass: #Persona	instanceVariableNames: 'nombre direccion'	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!Persona methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:18'!nombre: anObject	nombre := anObject! !!Persona methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:21'!nuevaPersona: unNombre direccion: unaDireccionself nombre: unNombre; direccion: unaDireccion! !!Persona methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:18'!direccion: anObject	direccion := anObject! !!Persona methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:18'!nombre	^ nombre! !!Persona methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:18'!direccion	^ direccion! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Persona class	instanceVariableNames: ''!!Persona class methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:21'!nuevaPersona: unNombre direccion: unaDireccion^self new nuevaPersona: unNombre direccion: unaDireccion! !Persona subclass: #Cliente	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!Object subclass: #Producto	instanceVariableNames: 'nombre descripcion precio cantidadStock vendedor'	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 18:38'!verMiStock^cantidadStock ! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:36'!nombre: anObject	nombre := anObject! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:36'!descripcion	^ descripcion! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:36'!precio: anObject	precio := anObject! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:39'!nuevoProducto: unNombre descripcion:unaDescripcion precio:unPrecio cantidadStock: unaCantidad vendedor:unVendedorself nombre:unNombre;descripcion:unaDescripcion ; precio:unPrecio; cantidadStock: unaCantidad; vendedor:unVendedor! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 17:27'!hayStock:unaCantidad^cantidadStock >= unaCantidad! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 17:29'!restarStock: unaCantidadcantidadStock := cantidadStock - unaCantidad ! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:36'!cantidadStock: anObject	cantidadStock := anObject! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:36'!descripcion: anObject	descripcion := anObject! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:36'!vendedor: anObject	vendedor := anObject! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:36'!cantidadStock	^ cantidadStock! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:36'!precio	^ precio! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:36'!vendedor	^ vendedor! !!Producto methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:36'!nombre	^ nombre! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Producto class	instanceVariableNames: ''!!Producto class methodsFor: 'accessing' stamp: 'Nic 6/4/2020 16:40'!nuevoProducto: unNombre descripcion:unaDescripcion precio:unPrecio cantidadStock: unaCantidad vendedor:unVendedor^self new nuevoProducto: unNombre descripcion:unaDescripcion precio:unPrecio cantidadStock: unaCantidad vendedor:unVendedor! !Persona subclass: #Vendedor	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MercadoObjetos'!