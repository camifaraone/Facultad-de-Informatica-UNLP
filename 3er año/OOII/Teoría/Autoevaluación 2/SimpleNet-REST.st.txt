Object subclass: #SimpleNetApi	instanceVariableNames: 'teapot jsonWriter port'	classVariableNames: ''	package: 'SimpleNet-REST'!!SimpleNetApi methodsFor: 'private' stamp: 'Casco 3/31/2021 14:47'!users    ^ SimpleNet soleInstance users! !!SimpleNetApi methodsFor: 'private' stamp: 'Casco 3/31/2021 15:23'!userWithEmail: anEmailAddress	^ SimpleNet soleInstance users		detect: [ :each | each email = anEmailAddress ]		ifNone: [ nil ]! !!SimpleNetApi methodsFor: 'running' stamp: 'Casco 3/31/2021 14:50'!port: aPortNumber	port := aPortNumber .! !!SimpleNetApi methodsFor: 'running' stamp: 'Casco 3/31/2021 14:56'!start	teapot := Teapot configure: {(#port -> port)}.	self setupRoutes.	teapot start! !!SimpleNetApi methodsFor: 'running' stamp: 'Casco 3/31/2021 14:55'!stop	teapot stop.	teapot := nil! !!SimpleNetApi methodsFor: 'private-json' stamp: 'Casco 3/31/2021 15:28'!asJSON: anObject	| stream |	stream := String new writeStream.	"Not sure we are allowed to change the stream of a writer - let's try it anyway"	jsonWriter on: stream.	jsonWriter nextPut: anObject.	^ stream contents! !!SimpleNetApi methodsFor: 'private-routes' stamp: 'Casco 3/31/2021 21:43'!setupRoutes	teapot GET: 'users' -> [ :req | self asJSON: self users ].	teapot		GET:			'users/<email>'				-> [ :req | self asJSON: (self userWithEmail: (req at: #email)) ].	teapot		GET:			'users/<email>/friends'				-> [ :req | self asJSON: (self userWithEmail: (req at: #email)) friends ].	teapot		GET:			'users/<email>/posts'				-> [ :req | self asJSON: (self userWithEmail: (req at: #email)) posts ].	teapot		POST:			'users/<email>/posts/<text>'				-> [ :req | 					(self userWithEmail: (req at: #email))						post: (Post text: (req at: #text)) ]! !!SimpleNetApi methodsFor: 'initialization' stamp: 'Casco 3/31/2021 15:05'!initialize	port := 8888.	self setupJsonWriter. ! !!SimpleNetApi methodsFor: 'initialization' stamp: 'Casco 4/1/2021 08:11'!setupJsonWriter	jsonWriter := NeoJSONWriter new.	jsonWriter prettyPrint: true.	jsonWriter mapInstVarsFor: Post.	jsonWriter		for: User		do: [ :objectMapping | 			objectMapping				mapInstVar: #name;				mapInstVar: #email ].	jsonWriter		for: DateAndTime		customDo: [ :customMapping | customMapping encoder: #printString ]! !