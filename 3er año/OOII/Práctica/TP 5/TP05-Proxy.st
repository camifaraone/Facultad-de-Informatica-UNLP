Object subclass: #DatabaseAccess	instanceVariableNames: ''	classVariableNames: ''	package: 'TP05-Proxy'!!DatabaseAccess methodsFor: 'as yet unclassified' stamp: 'DiegoTowers 5/19/2019 16:56'!insertNewRow: rowData	"Inserts in the database the row data"	self subclassResponsibility .! !!DatabaseAccess methodsFor: 'as yet unclassified' stamp: 'DiegoTowers 5/19/2019 16:56'!getSearchResults: queryString	"returns a dataTable with the results of the strings."	self subclassResponsibility .! !TestCase subclass: #DatabaseRealAccessTestCase	instanceVariableNames: 'database'	classVariableNames: ''	package: 'TP05-Proxy'!!DatabaseRealAccessTestCase methodsFor: 'running' stamp: 'DiegoTowers 5/19/2019 16:22'!setUp	"Hooks that subclasses may override to define the fixture of test."	database:= DatabaseRealAcess new.! !!DatabaseRealAccessTestCase methodsFor: 'tests' stamp: 'DiegoTowers 5/20/2019 15:47'!testInsertNewRow	"comment stating purpose of message"	|rowData|	rowData:= #('Paturuzu' 'La flor'). self assert: ((database insertNewRow: rowData) == 3). self assert:((database getSearchResults: 'select * from comics where id=3') = rowData).! !!DatabaseRealAccessTestCase methodsFor: 'tests' stamp: 'DiegoTowers 5/20/2019 15:47'!testGetSearchResults	"comment stating purpose of message"self assert:((database getSearchResults: 'select * from comics where id=1') = #('Spiderman' 'Marvel')).self assert:((database getSearchResults: 'select * from comics where id=10') = #()).! !DatabaseAccess subclass: #DatabaseRealAcess	instanceVariableNames: 'data currentId'	classVariableNames: ''	package: 'TP05-Proxy'!!DatabaseRealAcess methodsFor: 'initialization' stamp: 'DiegoTowers 5/20/2019 15:46'!initialize	|spiderman batman|	data:= Dictionary new.	spiderman:= #('Spiderman' 'Marvel').	batman:= #('Batman' 'DC comics').	currentId:= 3.	data at:'select * from comics where id=1'  put: spiderman.	data at:'select * from comics where id=2'  put: batman.! !!DatabaseRealAcess methodsFor: 'as yet unclassified' stamp: 'DiegoTowers 5/19/2019 16:38'!insertNewRow: rowData	"Inserts in the database the row data"	data		at: 'select * from comics where id=' , currentId printString		put: rowData.	currentId := currentId + 1.	^ currentId - 1! !!DatabaseRealAcess methodsFor: 'as yet unclassified' stamp: 'DiegoTowers 5/19/2019 16:19'!getSearchResults: queryString	"returns a dataTable with the results of the strings. This is a mock implementation just for the exercise."		  ^ data at:queryString ifAbsent: #().	! !